(function() {
  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};
templates['event'] = template({"1":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "                    <div class=\"row\">\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.prizes : depth0)) != null ? stack1["0"] : stack1),{"name":"if","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.prizes : depth0)) != null ? stack1["1"] : stack1),{"name":"if","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "                    </div>\n";
},"2":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "                            <div class=\"col-xs-12 col-lg-6 col-md-6 chip\">Winners: "
    + container.escapeExpression(container.lambda(((stack1 = (depth0 != null ? depth0.prizes : depth0)) != null ? stack1["0"] : stack1), depth0))
    + "</div>\n";
},"4":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "                            <div class=\"col-xs-12 col-lg-6 col-md-6 chip\">Runners up: "
    + container.escapeExpression(container.lambda(((stack1 = (depth0 != null ? depth0.prizes : depth0)) != null ? stack1["1"] : stack1), depth0))
    + "</div>\n";
},"6":function(container,depth0,helpers,partials,data) {
    var alias1=container.escapeExpression;

  return "                    <div class=\"col-xs-12\">\n                        <div class=\"title\">Level "
    + alias1((helpers.succ || (depth0 && depth0.succ) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),(data && data.index),{"name":"succ","hash":{},"data":data}))
    + "</div>\n                        <div>\n                            <blockquote>"
    + alias1(container.lambda(depth0, depth0))
    + "</blockquote>\n                        </div>\n                    </div>\n";
},"8":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "                    <div class=\"col-xs-12 event-managers\">\n                        <span class=\"manager-name\">"
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + ":</span> "
    + alias4(((helper = (helper = helpers.mobile || (depth0 != null ? depth0.mobile : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"mobile","hash":{},"data":data}) : helper)))
    + "\n                    </div>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "<div class=\"container no-margin white-text\">\n    <div class=\"event-row row center-xs\">\n        <div class=\"col-sm-4 col-xs-12 dark-col\">\n            <div class=\"row end-xs\">\n                <div class=\"col-xs-12\"><img src=\"../../img/cancel.svg\" alt=\"Close\" class=\"close\"></div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12 title\">"
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "</div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <div class=\"event-description\">"
    + alias4(((helper = (helper = helpers.description || (depth0 != null ? depth0.description : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"description","hash":{},"data":data}) : helper)))
    + "</div>\n                </div>\n            </div>\n            <div class=\"participant-data\">\n                <div class=\"row\">\n                    <div class=\"col-xs-12 col-lg-6 col-md-6 chip\">\n                        <div>Participants x"
    + alias4(((helper = (helper = helpers.participants || (depth0 != null ? depth0.participants : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"participants","hash":{},"data":data}) : helper)))
    + "</div>\n                    </div>\n                    <div class=\"col-xs-12 col-lg-6 col-md-6 chip\">\n                        <div>Fees: "
    + alias4(((helper = (helper = helpers.fees || (depth0 != null ? depth0.fees : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"fees","hash":{},"data":data}) : helper)))
    + "</div>\n                    </div>\n                </div>\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.prizes : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "            </div>\n        </div>\n\n        <div class=\"col-sm-8 col-xs-12 light-col\" style=\"overflow-y:auto;overflow-x: hidden \">\n            <div class=\"row start-xs levels\">\n"
    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.rounds : depth0),{"name":"each","hash":{},"fn":container.program(6, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "            </div>\n            <div class=\"row managers-row\">\n"
    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.managers : depth0),{"name":"each","hash":{},"fn":container.program(8, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "            </div>\n        </div>\n    </div>\n</div>\n\n";
},"useData":true});
})();
